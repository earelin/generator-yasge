buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:${gradleSpotBugsVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
        classpath "net.ltgt.gradle:gradle-apt-plugin:${gradleAptVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'checkstyle'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'net.ltgt.apt'
apply plugin: 'org.springframework.boot'
apply plugin: 'pmd'

apply from: 'gradle/docker.gradle'

description = 'UCM Storage Service'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options*.compilerArgs = ["-Xlint:all"]
compileTestJava.options*.compilerArgs = ["-Xlint:all"]

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

repositories {
    jcenter()
    maven {
        url "https://repo.spring.io/libs-milestone"
    }
}

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleToolVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    compile "org.springframework.boot:spring-boot-starter-actuator"

    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-jetty"

    compile "org.springframework.boot:spring-boot-devtools"

    testCompile "org.springframework.boot:spring-boot-starter-test"
}

checkstyle {
    configFile = file("${project.rootDir}/checkstyle.xml")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

pmd {
    ignoreFailures = true
}

spotbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

defaultTasks 'bootRun'
